public delegate void MyDelegate(string msg); //declaring a delegate

class Program
{
    static void Main(string[] args)
    {
        MyDelegate del = ClassA.MethodA;
        del("Hello World");

        del = ClassB.MethodB;
        del("Hello World");

        del = (string msg) => Console.WriteLine("Called lambda expression: " + msg);
        del("Hello World");
    }
}

class ClassA
{
    static void MethodA(string message)
    {
        Console.WriteLine("Called ClassA.MethodA() with parameter: " + message);
    }
}

class ClassB
{
    static void MethodB(string message)
    {
        Console.WriteLine("Called ClassB.MethodB() with parameter: " + message);
    }
}




//delegate example



using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using System.Linq;

namespace delegateexample1
{
    public delegate void Delegate_example1(string msg);

    public class Program
    {
        public static void Main()
        {
            Delegate_example1 a = ClassA.MethodA;
            Delegate_example1 b = ClassB.MethodB;

            Delegate_example1 del = a + b;
            Console.WriteLine("a + b");
            del("add a and b");

            Delegate_example1 c = (string msg) => Console.WriteLine("LE: " + msg);
            del += c;
            Console.WriteLine("a + b + c");
            del("add a,b and c");

            del = del - b;
            Console.WriteLine("del - b");
            del("Hello World");

            del -= a;
            Console.WriteLine("a - b");
            del("Hello World");
        }
    }

    public class ClassA
    {
        public static void MethodA(string message)
        {
            Console.WriteLine("Called ClassA.MethodA() with parameter: " + message);
            Console.ReadLine();
        }
    }

    public class ClassB
    {
        public static void MethodB(string message)
        {
            Console.WriteLine("Called ClassB.MethodB() with parameter: " + message);
            Console.ReadLine();
        }
    }

}




